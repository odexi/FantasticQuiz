{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/Categories.js","components/QuizSetup.js","components/Results.js","components/Quiz.js","App.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","Header","react_default","a","createElement","style","About","Categories","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","selectedCategory","changeCategory","e","setState","defineProperty","target","name","value","props","selectCategory","categories","find","c","id","parseInt","inherits","createClass","key","NativeSelect_default","onChange","map","category","Component","QuizSetup","nickname","numberOfQuestions","categoryName","difficulty","categoryId","toString","setupStyle","FormControl_default","optionStyle","index_es","type","components_Categories","variant","onClick","getQuestions","bind","margin","Results","paddingTop","paddingBottom","component","options","data","rightAnswers","questionAmount","Quiz","currentQuestionNumberIndex","showResults","randomizeAnswerOrder","wrongAnswers","rightAnswer","push","shuffleArray","array","i","j","Math","floor","random","_ref","checkTheAnswer","answer","questions","correct_answer","document","querySelector","backgroundColor","setTimeout","ReactDOM","render","getElementById","_this2","layout_Header","layoutStyle","rel","href","components_Results","float","question","incorrect_answers","answerButtonStyle","size","text","width","flex","border","marginBottom","App","console","log","url","axios","get","then","res","status","results","result","createAnswerObjects","decodeQuestionsHtmlEntity","correctAnswer","answers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","uuid","err","return","decodeHtml","html","txt","innerHTML","className","components_Quiz","components_QuizSetup","src_App_0"],"mappings":"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","file":"static/js/main.d353484a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Fantastic Quiz</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app v1.0.0. It is part of a \r\n          React example\r\n      </p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default About","import React, { Component } from 'react'\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nexport class Categories extends Component {\r\n\r\n    state = {\r\n        selectedCategory: '',\r\n    }\r\n\r\n    changeCategory = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.props.selectCategory(e.target.value, categories.find(c => c.id === parseInt(e.target.value)).name)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <NativeSelect\r\n                value={this.state.selectedCategory}\r\n                name='selectedCategory'\r\n                onChange={this.changeCategory}\r\n            >\r\n                {categories.map(category =>\r\n                    <option\r\n                        key={category.id}\r\n                        value={category.id}\r\n                    >\r\n                        {category.name}\r\n                    </option>\r\n                )}\r\n            </NativeSelect>\r\n        )\r\n    }\r\n}\r\n\r\nconst categories = [\r\n    {\r\n        name: 'Any Category',\r\n        id: 0\r\n    },\r\n    {\r\n        name: 'General Knowledge',\r\n        id: 9\r\n    },\r\n    {\r\n        name: 'Entertainment: Books',\r\n        id: 10\r\n    },\r\n    {\r\n        name: 'Entertainment: Film',\r\n        id: 11\r\n    },\r\n    {\r\n        name: 'Entertainment: Music',\r\n        id: 12\r\n    },\r\n    {\r\n        name: 'Entertainment: Musical & Theatres',\r\n        id: 13\r\n    },\r\n    {\r\n        name: 'Entertainment: Television',\r\n        id: 14\r\n    },\r\n    {\r\n        name: 'Entertainment: Video Games',\r\n        id: 15\r\n    },\r\n    {\r\n        name: 'Entertainment: Board Games',\r\n        id: 16\r\n    },\r\n    {\r\n        name: 'Science & Nature',\r\n        id: 17\r\n    },\r\n    {\r\n        name: 'Science: Computers',\r\n        id: 18\r\n    },\r\n    {\r\n        name: 'Science: Mathematics',\r\n        id: 19\r\n    },\r\n    {\r\n        name: 'Mythology',\r\n        id: 20\r\n    },\r\n    {\r\n        name: 'Sports',\r\n        id: 21\r\n    },\r\n    {\r\n        name: 'Geography',\r\n        id: 22\r\n    },\r\n    {\r\n        name: 'History',\r\n        id: 23\r\n    },\r\n    {\r\n        name: 'Politics',\r\n        id: 24\r\n    },\r\n    {\r\n        name: 'Art',\r\n        id: 25\r\n    },\r\n    {\r\n        name: 'Celebrities',\r\n        id: 26\r\n    },\r\n    {\r\n        name: 'Animals',\r\n        id: 27\r\n    },\r\n    {\r\n        name: 'Vehicles',\r\n        id: 28\r\n    },\r\n    {\r\n        name: 'Entertainment: Comics',\r\n        id: 29\r\n    },\r\n    {\r\n        name: 'Science: Gadgets',\r\n        id: 30\r\n    },\r\n    {\r\n        name: 'Entertainment: Japanese Anime & Manga',\r\n        id: 31\r\n    },\r\n    {\r\n        name: 'Entertainment: Cartoon & Animations',\r\n        id: 32\r\n    },\r\n]\r\n\r\nexport default Categories\r\n","import React, { Component } from 'react'\r\nimport { Button, Input } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Categories from './Categories';\r\n\r\nexport class QuizSetup extends Component {\r\n    state = {\r\n        nickname: '',\r\n        numberOfQuestions: 5,\r\n        category: 0,\r\n        categoryName: '',\r\n        difficulty: 'any',\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    selectCategory = (categoryId, category) => {\r\n        this.setState({ category: categoryId.toString(), categoryName: category })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={setupStyle}>\r\n                <FormControl style={optionStyle}>\r\n                    <span>Nickname:</span><br></br>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"nickname\"\r\n                        value={this.state.nickname}\r\n                        onChange={this.onChange}\r\n                    ></Input></FormControl><br></br>\r\n\r\n                <FormControl style={optionStyle}>\r\n                    <span>Number of questions:</span><br></br>\r\n                    <NativeSelect\r\n                        name=\"numberOfQuestions\"\r\n                        value={this.state.numberOfQuestions}\r\n                        onChange={this.onChange}\r\n                    >\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={20}>20</option>\r\n                        <option value={30}>30</option>\r\n                    </NativeSelect></FormControl><br></br>\r\n                <FormControl style={optionStyle}>\r\n                    <span>Select category:</span><br></br>\r\n                    <Categories selectCategory={this.selectCategory} /></FormControl><br></br>\r\n                <FormControl style={optionStyle}>\r\n                    <span>Select difficulty:</span><br></br>\r\n                    <NativeSelect\r\n                        name=\"difficulty\"\r\n                        value={this.state.difficulty}\r\n                        onChange={this.onChange}\r\n                    >\r\n                        <option value='any'>Any</option>\r\n                        <option value='easy'>Easy</option>\r\n                        <option value='medium'>Medium</option>\r\n                        <option value='hard'>Hard</option>\r\n                    </NativeSelect><br></br>\r\n\r\n                </FormControl><br></br>\r\n\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                    onClick={this.props.getQuestions\r\n                        .bind(this, this.state.nickname, this.state.numberOfQuestions, this.state.category, this.state.categoryName, this.state.difficulty)}\r\n                >\r\n                    Start\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst setupStyle = {\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst optionStyle = {\r\n    margin: '2em',\r\n}\r\n\r\nexport default QuizSetup\r\n","import React, { Component } from 'react'\r\nimport { CardContent, Typography } from '@material-ui/core';\r\n\r\nexport class Results extends Component {\r\n  render() {\r\n    return (\r\n        <CardContent>\r\n            <Typography style={{ paddingTop: '1em', paddingBottom: '1em' }} variant=\"h5\" component=\"h2\">\r\n                Congratulations {this.props.options.nickname}, you got {this.props.data.rightAnswers} out of {this.props.data.questionAmount} right!\r\n            </Typography><br></br>\r\n            <Typography style={{ paddingTop: '1em', paddingBottom: '1em' }} variant=\"h5\" component=\"h5\">\r\n                Category: {this.props.options.categoryId !== 0 ? this.props.options.categoryName : 'any'}\r\n            </Typography><br></br>\r\n            <Typography style={{ paddingTop: '1em', paddingBottom: '1em' }} variant=\"h5\" component=\"h5\">\r\n                Difficulty: {this.props.options.difficulty}\r\n            </Typography>  \r\n        </CardContent>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Results\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Card, CardContent, Typography, Button } from '@material-ui/core';\r\nimport Header from './layout/Header'\r\nimport Results from './Results'\r\n\r\nexport class Quiz extends Component {\r\n\r\n    state = {\r\n        currentQuestionNumberIndex: 0,\r\n        rightAnswers: 0,\r\n        showResults: false,\r\n    }\r\n\r\n    randomizeAnswerOrder = (wrongAnswers, rightAnswer) => {\r\n        wrongAnswers.push(rightAnswer)\r\n        return this.shuffleArray(wrongAnswers)\r\n    }\r\n\r\n    shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    checkTheAnswer = (answer) => {\r\n        if (answer.id === this.props.questions[this.state.currentQuestionNumberIndex].correct_answer.id) {\r\n            document.querySelector(`#${answer.id}`).style.backgroundColor = '#88E823';\r\n            this.state.rightAnswers++;\r\n        }\r\n        else {\r\n            document.querySelector(`#${this.props.questions[this.state.currentQuestionNumberIndex].correct_answer.id}`).style.backgroundColor = '#88E823'\r\n            document.querySelector(`#${answer.id}`).style.backgroundColor = '#FF121F'\r\n        }\r\n        this.state.currentQuestionNumberIndex++\r\n        setTimeout(() => {\r\n            if (this.state.currentQuestionNumberIndex < this.props.questions.length) {\r\n                ReactDOM.render(this.render(), document.getElementById('root'))\r\n            }\r\n            else {\r\n                this.state.showResults = true;\r\n                ReactDOM.render(this.render(), document.getElementById('root'))\r\n            }\r\n        }\r\n            , 2000\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Card style={layoutStyle}>\r\n\r\n                    <header>\r\n                        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\r\n                        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n                    </header>\r\n                    {!this.state.showResults ?\r\n                        <CardContent>\r\n                            <div>\r\n                                <span style={{ float: 'right' }}>{this.state.currentQuestionNumberIndex + 1 + '/' + this.props.questions.length}</span>\r\n                                <span style={{ float: 'left' }}>{this.props.questions[this.state.currentQuestionNumberIndex].category}</span>\r\n                            </div>\r\n                            \r\n                            <Typography style={{ paddingTop: '2em', paddingBottom: '1em' }} variant=\"h5\" component=\"h2\">\r\n                                {this.props.questions[this.state.currentQuestionNumberIndex].question}\r\n                            </Typography>\r\n\r\n                            {this.randomizeAnswerOrder(this.props.questions[this.state.currentQuestionNumberIndex].incorrect_answers, this.props.questions[this.state.currentQuestionNumberIndex].correct_answer).map(answer =>\r\n                                <Button\r\n                                    style={answerButtonStyle}\r\n                                    size=\"large\"\r\n                                    color=\"primary\"\r\n                                    key={answer.id}\r\n                                    id={answer.id}\r\n                                    onClick={this.checkTheAnswer.bind(this, answer)}\r\n                                >\r\n                                    {answer.text}\r\n                                </Button>\r\n                            )}\r\n                        </CardContent>\r\n                        : <Results\r\n                            options={this.props.options}\r\n                            data={{\r\n                                rightAnswers: this.state.rightAnswers,\r\n                                questionAmount: this.props.questions.length\r\n                            }} />}\r\n\r\n                </Card>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst answerButtonStyle = {\r\n    width: '100%',\r\n    flex: '10',\r\n    border: '1px solid black',\r\n    marginBottom: '1em',\r\n\r\n}\r\n\r\nconst layoutStyle = {\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nexport default Quiz\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header'\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport './App.css';\nimport QuizSetup from './components/QuizSetup';\nimport Quiz from './components/Quiz';\nimport uuid from 'uuid/v4';\n\nclass App extends Component {\n  state = {\n    questions: [],\n    options: {}\n  }\n\n  componentDidMount() {\n    \n  }\n\n  getQuestions = (nickname, numberOfQuestions, categoryId, categoryName, difficulty) => {\n    console.log(nickname, numberOfQuestions, categoryId, difficulty)\n    let url = `https://opentdb.com/api.php?type=multiple&amount=${numberOfQuestions}`\n\n    if (categoryId !== 'any') {\n      url = url + `&category=${categoryId}`\n    }\n\n    if (difficulty !== 'any') {\n      url = url + `&difficulty=${difficulty}`\n    }\n\n    console.log(url)\n\n    axios.get(url)\n      .then(res => {\n        if (res.status === 200) {\n          res.data.results.map(result => result = this.createAnswerObjects(result))\n\n          let options = {\n            nickname: nickname,\n            categoryId: categoryId,\n            categoryName: categoryName,\n            difficulty: difficulty\n          }\n\n          this.setState({\n            questions: this.decodeQuestionsHtmlEntity(res.data.results),\n            options: options\n          })\n        }\n        else {\n          console.log(\"Api call was unsuccessfull!\")\n        }\n\n      })\n  }\n\n  createAnswerObjects = (result) => {\n\n    let correctAnswer = result.correct_answer\n    let answers = []\n\n    for (const [index, value] of result.incorrect_answers.entries()) {\n      let answer = {\n        text: value,\n        id: 'i' + uuid()\n      }\n\n      answers.push(answer)\n    }\n\n    result.incorrect_answers = answers\n    result.correct_answer = {\n      text: correctAnswer,\n      id: 'i' + uuid()\n    }\n\n    return result;\n  }\n\n  decodeHtml = (html) => {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  decodeQuestionsHtmlEntity = (results) => {\n    results = results.map(result => {\n      result.question = this.decodeHtml(result.question);\n      result.correct_answer.text = this.decodeHtml(result.correct_answer.text);\n      result.incorrect_answers.map(res => this.decodeHtml(res.text));\n      return result\n    })\n    return results\n  }\n\n  render() {\n    return (\n      <div>\n\n        <header>\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        </header>\n\n\n        <div className=\"App\">\n          <div className=\"container\">\n            {this.state.questions.length === 0 ?\n              <Header />\n              : null}\n            {/* <Route exact path=\"/\" render={props => ( */}\n              {/* <React.Fragment> */}\n                {this.state.questions.length > 0 ? <Quiz questions={this.state.questions} options={this.state.options} /> : <QuizSetup getQuestions={this.getQuestions} />}\n\n              {/* </React.Fragment> */}\n            {/* )} /> */}\n            {/* <Route path=\"/about\" component={About} /> */}\n\n          </div>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}